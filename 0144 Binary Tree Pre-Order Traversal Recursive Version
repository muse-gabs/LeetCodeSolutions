/* Given a binary tree, return the preorder traversal of its nodes' values.

Example:

Input: [1,null,2,3]
   1
    \
     2
    /
   3

Output: [1,2,3]

*/


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 
class Solution {
    
    public List<Integer> preorderTraversal(TreeNode root) {
        ArrayList<Integer> result = new ArrayList<Integer>();
        if (root != null) {
            preorder(root, result);
        }
        return result;
    }
    
    private void preorder(TreeNode node, ArrayList<Integer> result) {
        if (node == null) {return;}
        result.add(node.val);
        preorder(node.left, result);
        preorder(node.right, result);
    }
}
